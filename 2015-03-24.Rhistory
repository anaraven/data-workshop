nMis <- sum(misClas)
if(nMis==0) break;
cat(i,nMis/N,"\n")
n <- sample((1:N)[misClas], 1)
w <- w + y[,n] * X[,n,drop=F]
i <- i+1
}
-100:100
-100:100/100
??grid
-50:50/50
rep(-50:50/50,3)
rep(-50:50/50,rep(3,101))
rango <- -50:50/50
rango
length(rango)
eval <-t(data.frame(x=rep(rangl,length(rango)),
y=rep(rango,rep(length(rango),lenght(rango)))))
eval <-t(data.frame(x=rep(rango,length(rango)),
y=rep(rango,rep(length(rango),lenght(rango)))))
eval <-t(data.frame(x=rep(rango,length(rango)),
y=rep(rango,rep(length(rango),length(rango)))))
plot(eval)
plot(eval[,1])
plot(eval[1,])
plot(t(eval))
plot(t(eval),pch=".")
eval <-t(data.frame(x=rep(rango,length(rango)),
y=rep(rango,rep(length(rango),length(rango))),
z=1))
t(w) %*% eval
t(w)
eval[,1]
eval[,1:3]
eval[,1:5]
t(w) %*% eval[,1:5]
t(w) %*% eval[,1:50]
t(w) %*% eval[,1:500]
w
as.vector(t(w) %*% eval[,1:500])
as.vector(t(w) %*% eval[,1:5000])
plot(as.vector(t(w) %*% eval[,1:5000]))
plot(as.vector(t(w) %*% eval))
plot(sign(as.vector(t(w) %*% eval)))
table(sign(as.vector(t(w) %*% eval)))
table(f(eval,a,b))
table(f(eval,a,b),sign(as.vector(t(w) %*% eval)))
table(f(eval,a,b),sign(t(w) %*% eval))
comp <- table(f(eval,a,b),sign(t(w) %*% eval))
sum(diag(comp)/sum(comp)
)
sum(diag(comp))/sum(comp)
source('~/perceptron.R', echo=TRUE)
source('~/perceptron.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ans <- data.frame(n=rep(NA,1000),e=rep(NA,1000))
cat(j,p$n,ans[j,"e"],"\n")
source('~/perceptron.R', echo=TRUE)
summary(ans)
hist(ans$n)
source('~/perceptron.R', echo=TRUE)
hist(ans$n)
summary(ans)
hist(ans$e)
hist(ans$e,30)
source('~/perceptron.R', echo=TRUE)
hist(ans$e,30)
summary(ans)
search()
ls(pos=2)
ls(pos=1)
ls(pos=3)
ls(pos=4)
ls(pos=5)
ls(pos=6)
ls(pos=7)
ls(pos=8)
ls(pos=9)
?ls
objects(2)
objects(3)
objects(4)
gl(10,10)
gl(1,10)
gl(2,10)
gl(10,2)
a=read.csv("Downloads/hw1_data.csv")
head(a)
a[1:2,]
a[152:153,]
summary(a)
a[47,]
attach(a)
table(Ozone>21)
table(Ozone>31)
table(Ozone>31 & Temp>90)
a[Ozone>31 & Temp>90,)
a[Ozone>31 & Temp>90,]
a[Ozone>31 &7 Temp>90,]
a[Ozone>31 && Temp>90,]
summary(a[Ozone>31 & Temp>90,])
str(a)
summary(a[Month,])
summary(a[Month==6,])
class(c(4, "a", TRUE))
x <- c(1,3, 5); y <- c(3, 2, 10); cbind(x, y)
class(cbind(x,y))
x <- 1:10
if(x > 5) {
x <- 0
}
library(datasets)
data(iris)
summary(iris)
mean(iris$Sepal.Length)
colMeans(iris)
colMeans(iris[1:4])
apply(iris[, 1:4], 2, mean)
data(mtcars)
?mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
summary(mtcars)
tapply(mtcars$hp, mtcars$cyl, mean)
q=tapply(mtcars$hp, mtcars$cyl, mean)
abs(q[1]-q[3])
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
summary(iris)
tapply(iris$Sepal.Length,iris$Species,mean)
set.seed(31);
heightsCM = rnorm(30,mean=188, sd=5);
weightsK = rnorm(30,mean=84,sd=3);
hasDaughter = sample(c(TRUE,FALSE),size=30,replace=T);
dataFrame = data.frame(heightsCM,weightsK,hasDaughter)
dataFrame$heightsCM
dataFrame$heightsCM>188
dataFrameSubset=dataFrame[dataFrame$heightsCM>188,]
mean(dataFrameSubset$weightsK)
rcauchy(10)
set.seed(41)
cauchyValues =rcauchy(100)
set.seed(415)
sample(cauchyValues,10,T)
set.seed(31);
heightsCM = rnorm(30,mean=188, sd=5);
weightsK = rnorm(30,mean=84,sd=3);
hasDaughter = sample(c(TRUE,FALSE),size=30,replace=T);
dataFrame = data.frame(heightsCM,weightsK,hasDaughter);
dataFrameSubset=dataFrame[dataFrame$heightsCM>188,]
mean(dataFrameSubset$weightsK)
con=url(" http://simplystatistics.tumblr.com/")
con=url("http://simplystatistics.tumblr.com/")
simplyStats=readLines(con,150)
nc=nchar(simplyStats)
nc[c(2,45,122)]
?download.file
read.csv("Documents/cursoR/ss06hid.csv")
h=read.csv("Documents/cursoR/ss06hid.csv")
summary(h)
table(h$VAL)
table(h$VAL>=14)
table(h$BDS)
table(h$BDS,h$RMS)
table(h$ACR==3)
table(h$ACR,$AGS)
table(h$ACR,h$AGS)
agricultureLogical=h$ACR==3 & h$AGS==6
table(agricultureLogical)
which(agricultureLogical)
idx=which(agricultureLogical)
sbs=h[idx,]
summary(sbs$MRGX)
aaa=strsplit(colnames(h),"wgtp")
a[123]
aaa[123]
summary(h$YBL)
table(h$YBL)
h=read.csv("ss06pid.csv")
h=read.csv("Documents/cursoR/ss06pid.csv")
housingData=read.csv("Documents/cursoR/ss06hid.csv")
populationData=read.csv("Documents/cursoR/ss06pid.csv")
?merge
merge(housingData,populationData,by="SERIALNO")
mm=merge(housingData,populationData,by="SERIALNO")
mm=merge(housingData,populationData,by="SERIALNO",all=T)
library(rpart)
?rpart
3^20
3^20/60
3^20/60/60
3^20/60/60/1000
3^20/60/60/1000/24
3^20/60/60/100000/24
library(parallel)
mcMap
mcparallel
summary(cars)
plot(cars)
install.packages("optparse")
?sample
library(igraph)
a = read.graph("Lombarde/Input/RDB8.1/gold-std.ncol", type="ncol")
a = read.graph("Lombarde/Input/RDB8.1/gold-std.ncol", format="ncol")
?igraph
require(ggmap)
require(mapproj)
install.packages("ggmap")
ll <- read.table("~/Desktop/2014-02-latlon.txt", quote="\"", stringsAsFactors=FALSE)
View(ll)
colnames(ll) <- c("foto","lat","lon")
p <- qmap(c(-5, 60, 19, 48), zoom = 4)
library(qqmap)
library(ggmap)
p <- qmap(c(-5, 60, 19, 48), zoom = 4)
p + geom_point(aes(lon, lat), data = ll)
require(devtools)
install_github('rCharts', 'ramnathv')
install.packages(c("Formula", "markdown", "mime"))
install.packages("mgcv")
map3 <- Leaflet$new()
plot(ll[,2:3])
plot(ll[,c(3,2)])
require(rCharts)
map3 <- Leaflet$new()
hist(ll$lon)
hist(ll$lon[ll$lon>40])
hist(ll$lon[ll$lon>10])
hist(ll$lon[ll$lon>20])
hist(ll$lat[ll$lat>10])
hist(ll$lat[ll$lat>10 & ll$lat<50])
hist(ll$lat[ll$lat>10 & ll$lat<45])
map3$setView(c(41, 29), zoom = 9)
map3$print("chart7")
hist(ll$lat[ll$lat>40 & ll$lat<45])
hist(ll$lat[ll$lat>40 & ll$lat<45 & ll$lon>20])
hist(ll$lat[ll$lat>40.8 & ll$lat<45 & ll$lon>20])
ll[ll$lat>40.8 & ll$lat<45 & ll$lon>20,]
my_data <- ll[ll$lat>40.8 & ll$lat<45 & ll$lon>20,]
apply(my_data$lat, paste(my_data[,2:3]), min)
tapply(my_data$lat, paste(my_data[,2:3]), min)
tapply(my_data$lat, paste(my_data$lat, my_data$lon), min)
lat = tapply(my_data$lat, paste(my_data$lat, my_data$lon), min)
lon = tapply(my_data$lon, paste(my_data$lat, my_data$lon), min)
plot(lat,lon)
plot(lat~lon)
data <- data.frame(lat = tapply(my_data$lat, paste(my_data$lat, my_data$lon), min),
lon = tapply(my_data$lon, paste(my_data$lat, my_data$lon), min))
plot(dat)
plot(data)
?rCharts
?rChart
map3$marker
map3$marker(data)
map3$print("chart7")
get_assets
get_assets()
map3$show()
map3 <- Leaflet$new()
map3$setView(c(41, 29), zoom = 10)
for(i in 1:nrow(data)) {
map3$marker(data[i,2:3])
}
for(i in 1:nrow(data)) {
map3$marker(data[i,])
}
map3$print("chart7")
map3$show("chart7")
map3$show()
data
rownames(data)=NULL
data
map3 <- Leaflet$new()
map3$setView(c(41, 29), zoom = 10)
for(i in 1:nrow(data)) {
map3$marker(data[i,], bindPopup = "hi")
}
map3$show()
data[1,]
data[1,,drop=T]
data[1,,drop=F]
map3 <- Leaflet$new()
map3$setView(c(41, 29), zoom = 10)
for(i in 1:nrow(data)) {
map3$marker(data[i,,drop=T], bindPopup = "hi")
}
map3$show()
map3
map3$print()
map3 <- Leaflet$new()
map3$setView(c(41, 29), zoom = 10)
for(i in 1:nrow(data)) {
map3$marker(c(data[i,1], data[i,2]), bindPopup = "hi")
}
map3$show()
map3$print()
data
c(data[i,1], data[i,2])
unlist(c(data[i,1], data[i,2]))
unclass(c(data[i,1], data[i,2]))
?name
lat <- tapply(my_data$lat, paste(my_data$lat, my_data$lon), min)
lon <- tapply(my_data$lon, paste(my_data$lat, my_data$lon), min)
names(lat)
names(lat)=NULL
names(lat)
names(lat) <- NULL
names(lat)
lat
ll <- read.table("~/Desktop/2014-02-latlon.txt", quote="\"", stringsAsFactors=FALSE)
colnames(ll) <- c("foto","lat","lon")
my_data <- ll[ll$lat>40.8 & ll$lat<45 & ll$lon>20,]
lat <- tapply(my_data$lat, paste(my_data$lat, my_data$lon), min)
lat
names(lat)
lat[1]
unlist(lat[1])
names(lat) <- NULL
lat
?tapply
unclass(lat)
unique.data.frame(my_data)
unique.data.frame(my_data[2,3])
unique.data.frame(my_data[,2:3])
data <- unique.data.frame(my_data[2,3])
data <- unique.data.frame(my_data[,2:3])
data[1,]
data[1,1]
data <- unique.data.frame(my_data[,2:3])
i=1
c(data[i,1], data[i,2])
require(rCharts)
map3 <- Leaflet$new()
map3$setView(c(41, 29), zoom = 10)
for(i in 1:nrow(data)) {
map3$marker(c(data[i,1], data[i,2]), bindPopup = "hi")
}
map3$show()
install.packages("rmarkdown")
library(rmarkdown)
rmarkdown::render
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
knit
Identification of sets of genes sharing similar behaviors through different environmental stresses:
install.packages("wordcloud")
library("wordcloud", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
?wordcloud
wordcloud(c("Data Mining","BigData","genomics","microarrays", "expression"),5:9)
wordcloud(c("Data Mining","BigData","genomics","microarrays", "expression"),9:5)
wordcloud(c("Data Mining","BigData","genomics","microarrays", "expression"),9:5*2)
sessionInfo()
install.packages("optparse")
library(tidyr)
d <- read.delim("~/Desktop/Sahibinden/details.clean.txt", header=FALSE,
stringsAsFactors=TRUE,
col.names = c("id", "key", "value"))
d <- d[d$key!="İş",]
b <- spread(d, key, value, convert=TRUE)
rownames(b) <- b$id
b$id <- NULL
p <- read.delim("~/Desktop/Sahibinden/price.clean.txt", header=FALSE, stringsAsFactors=FALSE,
row.names=1, col.names=c("id","price"))
cols <- c("Banyo Sayısı", "Bina Yaşı", "Bulunduğu Kat", "Emlak Tipi", "Eşyalı", "Isıtma",
"Kat Sayısı", "m²", "Oda Sayısı", "Site İçerisinde")
for(c in cols) {
p[[c]] <- b[[c]]
}
plot(p)
summary(p)
p <- read.delim("~/Desktop/Sahibinden/price.clean.txt", header=FALSE, stringsAsFactors=FALSE,
row.names=1, col.names=c("id","price"))
cols <- c("Banyo Sayısı", "Bina Yaşı", "Bulunduğu Kat", "Emlak Tipi", "Eşyalı", "Isıtma",
"Kat Sayısı", "Oda Sayısı", "Site İçerisinde")
p[["m²"]] <- b[["m²"]]
for(c in cols) {
p[[c]] <- as.factor(b[[c]])
}
summary(p)
plot(p)
a <- read.table("~/RLombarde/a.txt", quote="\"")
View(a)
plot(a)
plot(a[,1], type="l")
lines(a[,2])
abline(0,1)
plot(a[,2], type="l")
abline(0,1)
table(diff(a[,2]))
which(diff(a[,2])==2)
a[37040:37050,]
a[-1,]
a[nrow(a),]
source("http://bioconductor.org/biocLite.R")
biocLite("GO.db")
library(GO.db)
GO_dbfile()
GO_dbschema()
library(rmakrdown)
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
ioslides_presentation
?class
?mode
A <- TRUE
B <- 3
C <- 1.5
typeof(A)
typeof(B)
typeof(C)
D <- "text"
E <- factor("red", levels=c("red","green","blue"))
F <- factor("red")
F
E
D
mode(E)
class(E)
A <- c(TRUE,FALSE,T,F)
A
A <- vector(TRUE,FALSE,T,F)
A <- c(TRUE, FALSE, T, F)
c(TRUE, FALSE, T, F)
B <- c(3, 2, 4, 4, 4, 5)
C <- c(1.5, 1.2, 5, 10)
D <- c("text","that","we", "write")
E <- factor(c("red","red","green"), levels=c("red","green","blue"))
E
G <- list(3, FALSE, "hi")
c(TRUE, FALSE, T, FALSE)
A <- c(TRUE, FALSE, T, FALSE)
G <- list(3, FALSE, "hi", E)
G <- list(3, FALSE, "hi", E, A, B)
G
gl <- read.delim("~/Desktop/data-workshop/M3D/3/1.2/gl.txt")
View(gl)
class(gl)
setwd("~/Desktop")
w <- read.delim("~/Desktop/world-ranking.txt", header=FALSE, quote="")
View(w)
summary(w)
world.ranking <- read.delim("~/Desktop/world-ranking.txt", quote="")
View(world.ranking)
summary(world.ranking)
ws <- read.delim("~/Desktop/world-ranking.txt", quote="'", stringsAsFactors=FALSE)
View(ws)
ws.nq <- read.delim("~/Desktop/world-ranking.txt", quote="", stringsAsFactors=FALSE)
View(ws.nq)
summary(ws)
summary(ws.sq)
summary(ws.nq)
summary(ws.nq)
w <- read.delim("~/Desktop/world-ranking.txt", quote="")
summary(w)
View(w)
w[1,2]
w[1,]
w[,2]
w[1:4,]
1:4
c(1,2,3,4)
c(1,5,4,8)
c(1,2,3,4,5,6)
1:10
10:1
10:-10
w[c(1,2,3,4),]
w[c(100,200,300,400),]
w[c(1,2,3,4),c(2,3)]
w[,1]
w[,"RANK"]
plot(w[,"RANK"])
1:100
w[1:100,"RANK"]
w[1:100,"RANK"] == 1:100
w[1:100,"RANK"] != 1:100
w[1:200,"RANK"] != 1:200
w[1:nrow(w),"RANK"] != 1:nrow(w)
w[,"RANK"] != 1:nrow(w)
table(w[,"RANK"] != 1:nrow(w))
w[w[,"RANK"] != 1:nrow(w) , ]
w[,"RANK"] != 1:nrow(w)
is.misplaced <- w[,"RANK"] != 1:nrow(w)
w[is.misplaced, c(1,2,4,5)]
w[is.misplaced, -3]
w[is.misplaced, c("RANK","NAME","CITATIONS")]
w[is.misplaced, c("NAME","RANK","CITATIONS")]
w[,"RANK"]
w$RANK
order(w$RANK)
w[order(w$RANK),]
wo <- w[order(w$RANK),]
plot(wo[,"RANK"])
table(wo[,"RANK"] != 1:nrow(wo))
order(w$NAME)
w[order(w$NAME), ]
w[order(w$NAME), "NAME"]
w[order(w$CITATIONS), ]
w[ order(w$CITATIONS, decreasing=T), ]
w[ order(w$CITATIONS, decreasing=T), c("NAME","CITATIONS")]
w.cit <- w[ order(w$CITATIONS, decreasing=T), c("NAME","CITATIONS")]
w.cit[1:5,]
w[ order(w$CITATIONS, decreasing=T), c("NAME","CITATIONS")][1:5,]
w[ order(w$CITATIONS, decreasing=T)[1:5], c("NAME","CITATIONS")]
centennial_Y2K <- read.delim("/var/folders/bn/rvchcq6j6b3dt0b26nkbxv1m000405/T//RtmpexGdES/data17961971035", header=FALSE, stringsAsFactors=FALSE)
View(centennial_Y2K)
savehistory("~/Desktop/data-workshop/2015-03-24.history.Rhistory")
