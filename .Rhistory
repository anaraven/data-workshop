idx=which(agricultureLogical)
sbs=h[idx,]
summary(sbs$MRGX)
aaa=strsplit(colnames(h),"wgtp")
a[123]
aaa[123]
summary(h$YBL)
table(h$YBL)
h=read.csv("ss06pid.csv")
h=read.csv("Documents/cursoR/ss06pid.csv")
housingData=read.csv("Documents/cursoR/ss06hid.csv")
populationData=read.csv("Documents/cursoR/ss06pid.csv")
?merge
merge(housingData,populationData,by="SERIALNO")
mm=merge(housingData,populationData,by="SERIALNO")
mm=merge(housingData,populationData,by="SERIALNO",all=T)
library(rpart)
?rpart
3^20
3^20/60
3^20/60/60
3^20/60/60/1000
3^20/60/60/1000/24
3^20/60/60/100000/24
library(parallel)
mcMap
mcparallel
summary(cars)
plot(cars)
install.packages("optparse")
?sample
library(igraph)
a = read.graph("Lombarde/Input/RDB8.1/gold-std.ncol", type="ncol")
a = read.graph("Lombarde/Input/RDB8.1/gold-std.ncol", format="ncol")
?igraph
require(ggmap)
require(mapproj)
install.packages("ggmap")
ll <- read.table("~/Desktop/2014-02-latlon.txt", quote="\"", stringsAsFactors=FALSE)
View(ll)
colnames(ll) <- c("foto","lat","lon")
p <- qmap(c(-5, 60, 19, 48), zoom = 4)
library(qqmap)
library(ggmap)
p <- qmap(c(-5, 60, 19, 48), zoom = 4)
p + geom_point(aes(lon, lat), data = ll)
require(devtools)
install_github('rCharts', 'ramnathv')
install.packages(c("Formula", "markdown", "mime"))
install.packages("mgcv")
map3 <- Leaflet$new()
plot(ll[,2:3])
plot(ll[,c(3,2)])
require(rCharts)
map3 <- Leaflet$new()
hist(ll$lon)
hist(ll$lon[ll$lon>40])
hist(ll$lon[ll$lon>10])
hist(ll$lon[ll$lon>20])
hist(ll$lat[ll$lat>10])
hist(ll$lat[ll$lat>10 & ll$lat<50])
hist(ll$lat[ll$lat>10 & ll$lat<45])
map3$setView(c(41, 29), zoom = 9)
map3$print("chart7")
hist(ll$lat[ll$lat>40 & ll$lat<45])
hist(ll$lat[ll$lat>40 & ll$lat<45 & ll$lon>20])
hist(ll$lat[ll$lat>40.8 & ll$lat<45 & ll$lon>20])
ll[ll$lat>40.8 & ll$lat<45 & ll$lon>20,]
my_data <- ll[ll$lat>40.8 & ll$lat<45 & ll$lon>20,]
apply(my_data$lat, paste(my_data[,2:3]), min)
tapply(my_data$lat, paste(my_data[,2:3]), min)
tapply(my_data$lat, paste(my_data$lat, my_data$lon), min)
lat = tapply(my_data$lat, paste(my_data$lat, my_data$lon), min)
lon = tapply(my_data$lon, paste(my_data$lat, my_data$lon), min)
plot(lat,lon)
plot(lat~lon)
data <- data.frame(lat = tapply(my_data$lat, paste(my_data$lat, my_data$lon), min),
lon = tapply(my_data$lon, paste(my_data$lat, my_data$lon), min))
plot(dat)
plot(data)
?rCharts
?rChart
map3$marker
map3$marker(data)
map3$print("chart7")
get_assets
get_assets()
map3$show()
map3 <- Leaflet$new()
map3$setView(c(41, 29), zoom = 10)
for(i in 1:nrow(data)) {
map3$marker(data[i,2:3])
}
for(i in 1:nrow(data)) {
map3$marker(data[i,])
}
map3$print("chart7")
map3$show("chart7")
map3$show()
data
rownames(data)=NULL
data
map3 <- Leaflet$new()
map3$setView(c(41, 29), zoom = 10)
for(i in 1:nrow(data)) {
map3$marker(data[i,], bindPopup = "hi")
}
map3$show()
data[1,]
data[1,,drop=T]
data[1,,drop=F]
map3 <- Leaflet$new()
map3$setView(c(41, 29), zoom = 10)
for(i in 1:nrow(data)) {
map3$marker(data[i,,drop=T], bindPopup = "hi")
}
map3$show()
map3
map3$print()
map3 <- Leaflet$new()
map3$setView(c(41, 29), zoom = 10)
for(i in 1:nrow(data)) {
map3$marker(c(data[i,1], data[i,2]), bindPopup = "hi")
}
map3$show()
map3$print()
data
c(data[i,1], data[i,2])
unlist(c(data[i,1], data[i,2]))
unclass(c(data[i,1], data[i,2]))
?name
lat <- tapply(my_data$lat, paste(my_data$lat, my_data$lon), min)
lon <- tapply(my_data$lon, paste(my_data$lat, my_data$lon), min)
names(lat)
names(lat)=NULL
names(lat)
names(lat) <- NULL
names(lat)
lat
ll <- read.table("~/Desktop/2014-02-latlon.txt", quote="\"", stringsAsFactors=FALSE)
colnames(ll) <- c("foto","lat","lon")
my_data <- ll[ll$lat>40.8 & ll$lat<45 & ll$lon>20,]
lat <- tapply(my_data$lat, paste(my_data$lat, my_data$lon), min)
lat
names(lat)
lat[1]
unlist(lat[1])
names(lat) <- NULL
lat
?tapply
unclass(lat)
unique.data.frame(my_data)
unique.data.frame(my_data[2,3])
unique.data.frame(my_data[,2:3])
data <- unique.data.frame(my_data[2,3])
data <- unique.data.frame(my_data[,2:3])
data[1,]
data[1,1]
data <- unique.data.frame(my_data[,2:3])
i=1
c(data[i,1], data[i,2])
require(rCharts)
map3 <- Leaflet$new()
map3$setView(c(41, 29), zoom = 10)
for(i in 1:nrow(data)) {
map3$marker(c(data[i,1], data[i,2]), bindPopup = "hi")
}
map3$show()
install.packages("rmarkdown")
library(rmarkdown)
rmarkdown::render
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
knit
Identification of sets of genes sharing similar behaviors through different environmental stresses:
install.packages("wordcloud")
library("wordcloud", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
?wordcloud
wordcloud(c("Data Mining","BigData","genomics","microarrays", "expression"),5:9)
wordcloud(c("Data Mining","BigData","genomics","microarrays", "expression"),9:5)
wordcloud(c("Data Mining","BigData","genomics","microarrays", "expression"),9:5*2)
sessionInfo()
install.packages("optparse")
library(tidyr)
d <- read.delim("~/Desktop/Sahibinden/details.clean.txt", header=FALSE,
stringsAsFactors=TRUE,
col.names = c("id", "key", "value"))
d <- d[d$key!="İş",]
b <- spread(d, key, value, convert=TRUE)
rownames(b) <- b$id
b$id <- NULL
p <- read.delim("~/Desktop/Sahibinden/price.clean.txt", header=FALSE, stringsAsFactors=FALSE,
row.names=1, col.names=c("id","price"))
cols <- c("Banyo Sayısı", "Bina Yaşı", "Bulunduğu Kat", "Emlak Tipi", "Eşyalı", "Isıtma",
"Kat Sayısı", "m²", "Oda Sayısı", "Site İçerisinde")
for(c in cols) {
p[[c]] <- b[[c]]
}
plot(p)
summary(p)
p <- read.delim("~/Desktop/Sahibinden/price.clean.txt", header=FALSE, stringsAsFactors=FALSE,
row.names=1, col.names=c("id","price"))
cols <- c("Banyo Sayısı", "Bina Yaşı", "Bulunduğu Kat", "Emlak Tipi", "Eşyalı", "Isıtma",
"Kat Sayısı", "Oda Sayısı", "Site İçerisinde")
p[["m²"]] <- b[["m²"]]
for(c in cols) {
p[[c]] <- as.factor(b[[c]])
}
summary(p)
plot(p)
a <- read.table("~/RLombarde/a.txt", quote="\"")
View(a)
plot(a)
plot(a[,1], type="l")
lines(a[,2])
abline(0,1)
plot(a[,2], type="l")
abline(0,1)
table(diff(a[,2]))
which(diff(a[,2])==2)
a[37040:37050,]
a[-1,]
a[nrow(a),]
source("http://bioconductor.org/biocLite.R")
biocLite("GO.db")
library(GO.db)
GO_dbfile()
GO_dbschema()
library(rmakrdown)
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
ioslides_presentation
?class
?mode
A <- TRUE
B <- 3
C <- 1.5
typeof(A)
typeof(B)
typeof(C)
D <- "text"
E <- factor("red", levels=c("red","green","blue"))
F <- factor("red")
F
E
D
mode(E)
class(E)
A <- c(TRUE,FALSE,T,F)
A
A <- vector(TRUE,FALSE,T,F)
A <- c(TRUE, FALSE, T, F)
c(TRUE, FALSE, T, F)
B <- c(3, 2, 4, 4, 4, 5)
C <- c(1.5, 1.2, 5, 10)
D <- c("text","that","we", "write")
E <- factor(c("red","red","green"), levels=c("red","green","blue"))
E
G <- list(3, FALSE, "hi")
c(TRUE, FALSE, T, FALSE)
A <- c(TRUE, FALSE, T, FALSE)
G <- list(3, FALSE, "hi", E)
G <- list(3, FALSE, "hi", E, A, B)
G
gl <- read.delim("~/Desktop/data-workshop/M3D/3/1.2/gl.txt")
View(gl)
class(gl)
load("~/Desktop/.RData")
View(centennial_Y2K)
f = textConnection(centennial_Y2K$V1)
read.fortran(f, c("A6", "A1", "A5", "I4", "2I3", "1X", "2I3", "F6.2", "1X", "2F8.3", "F6.1", "2I4"))
f = textConnection(centennial_Y2K$V1)
rep(c("F4.1", "1X", "A2", "1X", "A5"),2)
rep(c("F4.1", "1X", "A2", "1X", "A5"),12)
a <- read.fortran(f, c("A6", "A1", "A5", "I4", "2I3", "1X", "2I3", "F6.2", "1X", "2F8.3", "F6.1", "2I4", rep(c("F4.1", "1X", "A2", "1X", "A5"),12)))
summary(a)
View(a)
sapply(1:3,function(k) {c(paste("mag",k),paste("msc",k),paste("mdo",k))})
lapply(1:3,function(k) {c(paste("mag",k),paste("msc",k),paste("mdo",k))})
unlist(lapply(1:3,function(k) {c(paste("mag",k),paste("msc",k),paste("mdo",k))}))
unlist(lapply(1:12,function(k) {c(paste("mag",k),paste("msc",k),paste("mdo",k))}))
unlist(lapply(1:12,function(k) {c(paste("mag",k,sep="."), paste("msc",k,sep="."), paste("mdo",k,sep="."))}))
n <- c("icat", "asol", "isol", "yr", "mon", "day", "hr", "min", "sec", "glat", "glon", "dep", "greg", "ntel", )
n <- c("icat", "asol", "isol", "yr", "mon", "day", "hr", "min", "sec", "glat", "glon", "dep", "greg", "ntel")
n <- unlist(lapply(1:12,function(k) {c(paste("mag",k,sep="."), paste("msc",k,sep="."), paste("mdo",k,sep="."))}))
n <- c("icat", "asol", "isol", "yr", "mon", "day", "hr", "min", "sec", "glat", "glon", "dep", "greg", "ntel", n)
colnames(a) <- n
View(a)
summary(a)
data <- textConnection(centennial_Y2K$V1)
fmt <- c("A6", "A1", "A5", "I4", "2I3", "1X", "2I3", "F6.2", "1X", "2F8.3", "F6.1",
"2I4", rep(c("F4.0", "1X", "A2", "1X", "A5"),12))
a <- read.fortran(data, fmt)
n <- unlist(lapply(1:12,function(k) {
c(paste("mag",k,sep="."), paste("msc",k,sep="."), paste("mdo",k,sep="."))
}))
n <- c("icat", "asol", "isol", "yr", "mon", "day", "hr", "min", "sec", "glat", "glon", "dep", "greg", "ntel", n)
View(a)
colnames(a) <- n
View(a)
data <- textConnection(centennial_Y2K$V1)
fmt <- c("A6", "A1", "A5", "I4", "2I3", "1X", "2I3", "F6.0", "1X", "2F8.0", "F6.0",
"2I4", rep(c("F4.0", "1X", "A2", "1X", "A5"),12))
a <- read.fortran(data, fmt)
colnames(a) <- n
View(a)
summary(s)
summary(a)
a <- read.fortran(data, fmt, as.is=FALSE)
data <- textConnection(centennial_Y2K$V1)
a <- read.fortran(data, fmt, as.is=FALSE)
colnames(a) <- n
summary(a)
plot(a[,c("glat","glon")])
plot(a[,c("glon","glat")])
hist(a$mag.1)
hist(exp(a$mag.1))
plot(a[,c("glon","glat")],pch=a$mag.1/8)
plot(a[,c("glon","glat")],cex=a$mag.1/8)
plot(a[,c("glon","glat")],cex=(a$mag.1-5)/4)
hist(exp(a$mag.1-5))
hist(exp((a$mag.1-5)/2)
)
hist(exp((a$mag.1-5)/4))
hist(exp((a$mag.1-5)/6))
hist(exp((a$mag.1-5)/2))
plot(a[,c("glon","glat")],cex=exp((a$mag.1-5)/2))
plot(a[,c("glon","glat")],cex=exp((a$mag.1-5)/4))
plot(a[,c("glon","glat")],cex=exp((a$mag.1-5)/6))
table(a$greg)
sort(table(a$greg))
b <- a[a$mag.1>8]
b <- a[a$mag.1>8,]
plot(b[,c("glon","glat")],cex=exp((b$mag.1-5)/6))
plot(b[,c("glon","glat")],cex=exp((b$mag.1-8)/6))
plot(b[,c("glon","glat")],cex=exp((b$mag.1-8)/2))
plot(b[,c("glon","glat")],cex=exp((b$mag.1-8)))
energy <- exp(3*log(10)*(a$mag.1 + 2.9)/2)
hist(energy)
plot(sort(energy))
plot(sort(energy)/sum(energy))
plot(cumsum(sort(energy))/sum(energy))
hist(energy/sum(energy))
a[energy>sum(energy)/3]
a[energy>sum(energy)/3,]
a[energy>sum(energy)*0.3,]
plot(a[,c("glon","glat")],cex=energy*3/sum(energy))
plot(a[,c("glon","glat")],cex=energy*9/sum(energy))
a[energy>sum(energy)*0.3,4:15]
setwd("~/Desktop/data-workshop")
world.ranking <- read.delim("~/Desktop/data-workshop/world-ranking.txt")
View(world.ranking)
matrix(world.ranking,556,5)
class(world.ranking)
typeof(world.ranking)
typeof(world.ranking[[1]])
typeof(world.ranking[[2]])
typeof(world.ranking[[3]])
summary(world.ranking)
class(world.ranking[[1]])
class(world.ranking[[2]])
class(world.ranking[[3]])
class(world.ranking[[4]])
class(world.ranking[[5]])
matrix(world.ranking)
class(matrix(world.ranking))
typeof(matrix(world.ranking))
matrix(world.ranking)[1,1]
matrix(world.ranking)[1,2]
matrix(world.ranking)[2,1]
matrix(world.ranking)
matrix(c("a","b","c","d","e"))
matrix(c("a","b","c","d","e"), 556, 5)
matrix(c("a","b","c","d","e"), 556, 6)
matrix(1,2,3)
matrix(c(1), 2, 3)
matrix(c(1,2), 2, 3)
matrix(c(1,2), 3, 3)
?matrix
matrix(data=1, nrow=2, ncol=3)
m <- matrix(data=1, nrow=2, ncol=3)
attributes(m)
m <- matrix(data=c(1,2), nrow=2, ncol=3)
m
m$dim
attributes(m)$dim
attributes(m)$dim <- c(3,2)
m
unclass(m)
vector(m)
attributes(m)$dim <- NULL
m
m <- matrix(data=c(1,2), nrow=2, ncol=3)
m
m[2,]
m[,3]
m[2,3]
colnames(m) <- c("A","B","C")
m
rownames(m) <- c("x","y")
m
m["x","A"]
m[2,3]
m <- matrix(1:100, 10, 10)
m
1:10
1:10*2
rownames(m) <- 1:10*2
m
m[2,]
m["2",]
rep("A",10)
colnames(m) <- rep("A",10)
m
m[,"A"]
m[1,"A"]
rownames(m) <- rep("A",10)
m
m["A","A"]
?read.table
rep("A",10)
1:10
paste(rep("A",10), 1:10)
rownames(m) <- paste(rep("R",10), 1:10)
m
colnames(m) <- paste(rep("C",10), 1:10)
m
colnames(m) <- paste(rep("C",10), 1:10, sep=".")
m
colnames(m) <- paste(rep("C",10), 1:10, sep="_")
m
colnames(m) <- paste(rep("C",10), 1:10, sep=NULL)
colnames(m) <- paste(rep("C",10), 1:10, sep="")
m
colnames(m) <- paste("C", 1:10, sep="")
m
colnames(m) <- paste(c("C","D"), 1:10, sep="")
m
m <- matrix(data=1:100, nrow=10, ncol=10, dimnames=list(paste("R",1:10, sep=""), paste("C",1:10, sep="")))
m
fw <- read.delim("~/Downloads/HNAYA2S401R-Alignment.txt", header=FALSE)
View(fw)
rv <- read.delim("~/Downloads/HNB75UBE016-Alignment.txt", header=FALSE)
View(rv)
summary(rv)
fw <- read.delim("~/Downloads/HNAYA2S401R-Alignment.txt", header=FALSE, comment.char = "#")
View(fw)
rv <- read.delim("~/Downloads/HNB75UBE016-Alignment.txt", header=FALSE, comment.char = "#")
View(rv)
c("query id", "subject ids", "identity", "alignment length", "mismatches", "gap opens", "q. start", "q. end", "s. start", "s. end", "evalue", "bit score")
c("q.id", "s.id", "identity", "length", "mismatches", "gap", "q.start", "q.end", "s.start", "s.end", "evalue", "score")
colnames(fw) <- c("q.id", "s.id", "identity", "length", "mismatches", "gap", "q.start", "q.end", "s.start", "s.end", "evalue", "score")
colnames(rv) <- c("q.id", "s.id", "identity", "length", "mismatches", "gap", "q.start", "q.end", "s.start", "s.end", "evalue", "score")
View(rv)
View(rv)
summary(fv)
summary(fw)
fw$s.start
plot(fw$s.start)
plot(fw$s.start, type="l")
summary(fw)
summary(fw$s.id)
levels(fw$s.id)
chrom <- "gi|568815581|ref|NC_000017.11|"
fw$s.id==chrom
fw[fw$s.id==chrom,]
rv[rv$s.id==chrom,]
fw[fw$s.id==chrom & fw$end>fw$start,]
fw[fw$s.id==chrom & fw$s.end>fw$s.start,]
rv[rv$s.id==chrom & rv$s.end<rv$s.start,]
fw[fw$s.id==chrom & fw$s.end>fw$s.start, "s.start"]
rv[rv$s.id==chrom & rv$s.end<rv$s.start, "s.start"]
for(forward in fw[fw$s.id==chrom & fw$s.end>fw$s.start, "s.start"]) {}
for(forward in fw[fw$s.id==chrom & fw$s.end>fw$s.start, "s.start"]) {
print(forward)
}
for(forward in fw[fw$s.id==chrom & fw$s.end>fw$s.start, "s.start"]) {
for(reverse in rv[rv$s.id==chrom & rv$s.end<rv$s.start, "s.start"]) {
print(paste(forward,reverse))
}
}
for(forward in fw[fw$s.id==chrom & fw$s.end>fw$s.start, "s.start"]) {
print(reverse - forward)
}
for(forward in fw[fw$s.id==chrom & fw$s.end>fw$s.start, "s.start"]) {
for(reverse in rv[rv$s.id==chrom & rv$s.end<rv$s.start, "s.start"]) {
print(reverse - forward)
}
}
for(forward in fw[fw$s.id==chrom & fw$s.end>fw$s.start, "s.start"]) {
for(reverse in rv[rv$s.id==chrom & rv$s.end<rv$s.start, "s.start"]) {
if(reverse - forward>0 & reverse-forward<2000) {
print(paste(forward,reverse))
}
}
}
plot(a[,c("glon","glat")],cex=energy*9/sum(energy))
f = textConnection(centennial_Y2K$V1)
a <- read.fortran(f, c("A6", "A1", "A5", "I4", "2I3", "1X", "2I3", "F6.2", "1X", "2F8.3", "F6.1", "2I4", rep(c("F4.1", "1X", "A2", "1X", "A5"),12)))
energy <- exp(3*log(10)*(a$mag.1 + 2.9)/2)
plot(a[,c("glon","glat")],cex=energy*9/sum(energy))
n <- c("icat", "asol", "isol", "yr", "mon", "day", "hr", "min", "sec", "glat", "glon", "dep", "greg", "ntel", n)
n <- unlist(lapply(1:12,function(k) {
c(paste("mag",k,sep="."), paste("msc",k,sep="."), paste("mdo",k,sep="."))
}))
n <- c("icat", "asol", "isol", "yr", "mon", "day", "hr", "min", "sec", "glat", "glon", "dep", "greg", "ntel", n)
colnames(a) <- n
plot(a[,c("glon","glat")],cex=energy*9/sum(energy))
hist(energy)
energy <- exp(3*log(10)*(a$mag.1 + 2.9)/2)
plot(a[,c("glon","glat")],cex=energy*9/sum(energy))
plot(a[,c("glon","glat")],cex=energy*3/sum(energy))
hist(energy)
